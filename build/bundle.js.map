{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Display.svelte","../../src/Control1.svelte","../../src/Control2.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment && $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += \" \" + name + \"=\" + JSON.stringify(String(value)\n                .replace(/\"/g, '&#34;')\n                .replace(/'/g, '&#39;'));\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (has_prop(component.$$.props, name)) {\n        name = component.$$.props[name] || name;\n        component.$$.bound[name] = callback;\n        callback(component.$$.ctx[name]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, props) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (key, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n            return ret;\n        })\n        : prop_values;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","<script>\n  export let childCount1;\n  export let flexDirection1;\n  export let justifyContent1;\n  export let alignItems1;\n\n  export let withParent2;\n  export let childCount2;\n  export let flexDirection2;\n  export let justifyContent2;\n  export let alignItems2;\n  let childCount1Arr = [];\n  let childCount2Arr = [];\n  $: {\n    childCount1Arr = new Array(childCount1);\n    childCount2Arr = new Array(childCount2);\n  }\n</script>\n\n<style>\n  .display-parent {\n    height: 700px;\n    width: 450px;\n    margin: 0px 20px;\n    border: 2px solid #eee;\n    border-top-color: rgb(238, 238, 238);\n    border-top-style: solid;\n    border-top-width: 2px;\n    border-right-color: rgb(238, 238, 238);\n    border-right-style: solid;\n    border-right-width: 2px;\n    border-bottom-color: rgb(238, 238, 238);\n    border-bottom-style: solid;\n    border-bottom-width: 2px;\n    border-left-color: rgb(238, 238, 238);\n    border-left-style: solid;\n    border-left-width: 2px;\n    border-image-source: initial;\n    border-image-slice: initial;\n    border-image-width: initial;\n    border-image-outset: initial;\n    border-image-repeat: initial;\n  }\n  .child-box {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    margin: 1px;\n    /* padding: 20px; */\n    min-width: 100px;\n    min-height: 100px;\n    background-color: #03a9f4;\n    color: white;\n    font-size: 40px;\n  }\n  .parent2-box {\n    text-align: center;\n    margin: 1px;\n    min-width: 100px;\n    min-height: 100px;\n    background-color: #03a9f4;\n    color: white;\n  }\n  .child2-box {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    background-color: #009688;\n    margin: 1px;\n    min-width: 50px;\n    min-height: 50px;\n    font-size: 20px;\n  }\n</style>\n\n<div>\n  {#if withParent2 === false || childCount2Arr.length < 1}\n    <div\n      class=\"display-parent\"\n      style={`\n    display: flex;\n    flex-direction: ${flexDirection1};\n    place-content: stretch ${justifyContent1};\n    align-items: ${alignItems1};\n    `}>\n      {#each childCount1Arr as d, idx}\n        <div class=\"child-box\">{idx + 1}</div>\n      {/each}\n\n    </div>\n  {:else}\n    <div\n      class=\"display-parent\"\n      style={`\n    display: flex;\n    flex-direction: ${flexDirection1};\n    place-content: stretch ${justifyContent1};\n    align-items: ${alignItems1};\n    `}>\n      {#each childCount1Arr as d, idx}\n        <div\n          class=\"parent2-box\"\n          style={`\n    display: flex;\n    flex-direction: ${flexDirection2};\n    place-content: stretch ${justifyContent2};\n    align-items: ${alignItems2};\n    `}>\n\n          {#each childCount2Arr as d, idx2}\n            <div class=\"child2-box\">{idx2 + 1}</div>\n          {/each}\n        </div>\n      {/each}\n\n    </div>\n  {/if}\n\n</div>\n","<script>\n  export let changeChildCount1;\n  export let changeFlexDirection1;\n  export let changeJustifyContent1;\n  export let changeAlignItems1;\n\n  export let flexDirection1;\n  export let justifyContent1;\n  export let alignItems1;\n\n  export let withParent2;\n  export let changeWithParent2;\n\n  let printOutput1 = \"\";\n  $: {\n    printOutput1 = \"\";\n    if (flexDirection1.startsWith(\"column\")) {\n      printOutput1 += \"Column(\";\n    }\n    if (flexDirection1 === \"column-reverse\") {\n      printOutput1 += \"\\n verticalDirection: VerticalDirection.up,\";\n    }\n    if (flexDirection1.startsWith(\"row\")) {\n      printOutput1 += \"Row(\";\n    }\n    if (flexDirection1 === \"row-reverse\") {\n      printOutput1 += \"\\n textDirection: TextDirection.rtl,\";\n    }\n\n    if (justifyContent1 === \"flex-end\") {\n      printOutput1 += \"\\n mainAxisAlignment: MainAxisAlignment.end,\";\n    }\n    if (justifyContent1 === \"center\") {\n      printOutput1 += \"\\n mainAxisAlignment: MainAxisAlignment.center,\";\n    }\n    if (justifyContent1 === \"space-around\") {\n      printOutput1 += \"\\n mainAxisAlignment: MainAxisAlignment.spaceAround,\";\n    }\n    if (justifyContent1 === \"space-between\") {\n      printOutput1 += \"\\n mainAxisAlignment: MainAxisAlignment.spaceBetween,\";\n    }\n\n    if (alignItems1 === \"stretch\") {\n      printOutput1 += \"\\n crossAxisAlignment: CrossAxisAlignment.stretch,\";\n    }\n    if (alignItems1 === \"baseline\") {\n      printOutput1 += \"\\n crossAxisAlignment: CrossAxisAlignment.baseline,\";\n    }\n    if (alignItems1 === \"flex-start\") {\n      printOutput1 += \"\\n crossAxisAlignment: CrossAxisAlignment.start,\";\n    }\n    if (alignItems1 === \"flex-end\") {\n      printOutput1 += \"\\n crossAxisAlignment: CrossAxisAlignment.end,\";\n    }\n    printOutput1 += \"\\n children: <Widget>[],\";\n    printOutput1 += \"\\n)\";\n  }\n</script>\n\n<div>\n\n  <div class=\"child-count-container\">\n    <div class=\"control-heading child-count-info\">PARENT 1 child count</div>\n    <input\n      id=\"ChildCount\"\n      class=\"child-count-slider\"\n      type=\"range\"\n      min=\"1\"\n      max=\"8\"\n      on:change={e => {\n        changeChildCount1(e.target.value);\n      }}\n      value=\"3\" />\n  </div>\n\n  <div class=\"flex-attribute-control flex-direction\">\n    <div class=\"control-heading\">flex-direction</div>\n    <div class=\"control-explanation\">\n      row => textDirection: | column => verticalDirection:\n    </div>\n    <div class=\"control-group\">\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeFlexDirection1(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"flex-direction\"\n          value=\"row\" />\n        <span class=\"checkmark\" />\n        row\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeFlexDirection1(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"flex-direction\"\n          value=\"row-reverse\" />\n        <span class=\"checkmark\" />\n        row-reverse\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeFlexDirection1(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"flex-direction\"\n          value=\"column\"\n          checked=\"checked\" />\n        <span class=\"checkmark\" />\n        column\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeFlexDirection1(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"flex-direction\"\n          value=\"column-reverse\" />\n        <span class=\"checkmark\" />\n        column-reverse\n      </label>\n    </div>\n  </div>\n\n  <div class=\"flex-attribute-control justify-content\">\n    <div class=\"control-heading\">justify-content</div>\n    <div class=\"control-explanation\">= mainAxisAlignment:</div>\n    <div class=\"control-group\">\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeJustifyContent1(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"justify-content\"\n          value=\"flex-start\"\n          checked=\"checked\" />\n        <span class=\"checkmark\" />\n        flex-start (default)\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeJustifyContent1(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"justify-content\"\n          value=\"flex-end\" />\n        <span class=\"checkmark\" />\n        flex-end\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeJustifyContent1(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"justify-content\"\n          value=\"center\" />\n        <span class=\"checkmark\" />\n        center\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeJustifyContent1(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"justify-content\"\n          value=\"space-around\" />\n        <span class=\"checkmark\" />\n        space-around\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeJustifyContent1(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"justify-content\"\n          value=\"space-between\" />\n        <span class=\"checkmark\" />\n        space-between\n      </label>\n    </div>\n  </div>\n\n  <div class=\"flex-attribute-control align-items\">\n    <div class=\"control-heading\">align-items</div>\n    <div class=\"control-explanation\">= crossAxisAlignment:</div>\n    <div class=\"control-group\">\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeAlignItems1(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"align-items\"\n          value=\"stretch\" />\n        <span class=\"checkmark\" />\n        stretch\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeAlignItems1(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"align-items\"\n          value=\"baseline\" />\n        <span class=\"checkmark\" />\n        baseline\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeAlignItems1(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"align-items\"\n          value=\"center\"\n          checked=\"checked\" />\n        <span class=\"checkmark\" />\n        center (default)\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeAlignItems1(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"align-items\"\n          value=\"flex-start\" />\n        <span class=\"checkmark\" />\n        flex-start\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeAlignItems1(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"align-items\"\n          value=\"flex-end\" />\n        <span class=\"checkmark\" />\n        flex-end\n      </label>\n    </div>\n  </div>\n\n  <div class=\"flex-attribute-control parent2\">\n    <div class=\"control-explanation\">With parent 2</div>\n    <div class=\"control-group\">\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            if (withParent2) {\n              changeWithParent2(false);\n            } else {\n              changeWithParent2(true);\n            }\n          }}\n          type=\"checkbox\"\n          name=\"parent2\" />\n        <span class=\"checkmark\" />\n        With Parent 2\n      </label>\n    </div>\n  </div>\n\n  <div class=\"preview-container\">\n    <div class=\"control-heading\">PARENT 1 FLUTTER WIDGET OUTPUT</div>\n\n    <pre class=\"preview\">{printOutput1}</pre>\n\n  </div>\n\n</div>\n","<script>\n  export let changeChildCount2;\n  export let changeFlexDirection2;\n  export let changeJustifyContent2;\n  export let changeAlignItems2;\n\n  export let flexDirection2;\n  export let justifyContent2;\n  export let alignItems2;\n\n  let printOutput2 = \"\";\n  $: {\n    printOutput2 = \"\";\n    if (flexDirection2.startsWith(\"column\")) {\n      printOutput2 += \"Column(\";\n    }\n    if (flexDirection2 === \"column-reverse\") {\n      printOutput2 += \"\\n verticalDirection: VerticalDirection.up,\";\n    }\n    if (flexDirection2.startsWith(\"row\")) {\n      printOutput2 += \"Row(\";\n    }\n    if (flexDirection2 === \"row-reverse\") {\n      printOutput2 += \"\\n textDirection: TextDirection.rtl,\";\n    }\n\n    if (justifyContent2 === \"flex-end\") {\n      printOutput2 += \"\\n mainAxisAlignment: MainAxisAlignment.end,\";\n    }\n    if (justifyContent2 === \"center\") {\n      printOutput2 += \"\\n mainAxisAlignment: MainAxisAlignment.center,\";\n    }\n    if (justifyContent2 === \"space-around\") {\n      printOutput2 += \"\\n mainAxisAlignment: MainAxisAlignment.spaceAround,\";\n    }\n    if (justifyContent2 === \"space-between\") {\n      printOutput2 += \"\\n mainAxisAlignment: MainAxisAlignment.spaceBetween,\";\n    }\n    if (alignItems2 === \"stretch\") {\n      printOutput2 += \"\\n crossAxisAlignment: CrossAxisAlignment.stretch,\";\n    }\n    if (alignItems2 === \"baseline\") {\n      printOutput2 += \"\\n crossAxisAlignment: CrossAxisAlignment.baseline,\";\n    }\n    if (alignItems2 === \"flex-start\") {\n      printOutput2 += \"\\n crossAxisAlignment: CrossAxisAlignment.start,\";\n    }\n    if (alignItems2 === \"flex-end\") {\n      printOutput2 += \"\\n crossAxisAlignment: CrossAxisAlignment.end,\";\n    }\n    printOutput2 += \"\\n children: <Widget>[],\";\n    printOutput2 += \"\\n)\";\n  }\n</script>\n\n<div>\n\n  <div class=\"child-count-container\">\n    <div class=\"control-heading child-count-info\">PARENT 2 child count</div>\n    <input\n      id=\"ChildCount\"\n      class=\"child-count-slider\"\n      type=\"range\"\n      min=\"1\"\n      max=\"8\"\n      on:change={e => {\n        changeChildCount2(e.target.value);\n      }}\n      value=\"2\" />\n  </div>\n\n  <div class=\"flex-attribute-control flex-direction\">\n    <div class=\"control-heading\">flex-direction</div>\n    <div class=\"control-explanation\">\n      row => textDirection: | column => verticalDirection:\n    </div>\n    <div class=\"control-group\">\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeFlexDirection2(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"flex-direction2\"\n          value=\"row\"\n          checked=\"checked\" />\n        <span class=\"checkmark\" />\n        row\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeFlexDirection2(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"flex-direction2\"\n          value=\"row-reverse\" />\n        <span class=\"checkmark\" />\n        row-reverse\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeFlexDirection2(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"flex-direction2\"\n          value=\"column\" />\n        <span class=\"checkmark\" />\n        column\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeFlexDirection2(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"flex-direction2\"\n          value=\"column-reverse\" />\n        <span class=\"checkmark\" />\n        column-reverse\n      </label>\n    </div>\n  </div>\n\n  <div class=\"flex-attribute-control justify-content\">\n    <div class=\"control-heading\">justify-content</div>\n    <div class=\"control-explanation\">= mainAxisAlignment:</div>\n    <div class=\"control-group\">\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeJustifyContent2(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"justify-content2\"\n          value=\"flex-start\"\n          checked=\"checked\" />\n        <span class=\"checkmark\" />\n        flex-start (default)\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeJustifyContent2(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"justify-content2\"\n          value=\"flex-end\" />\n        <span class=\"checkmark\" />\n        flex-end\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeJustifyContent2(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"justify-content2\"\n          value=\"center\" />\n        <span class=\"checkmark\" />\n        center\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeJustifyContent2(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"justify-content2\"\n          value=\"space-around\" />\n        <span class=\"checkmark\" />\n        space-around\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeJustifyContent2(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"justify-content2\"\n          value=\"space-between\" />\n        <span class=\"checkmark\" />\n        space-between\n      </label>\n    </div>\n  </div>\n\n  <div class=\"flex-attribute-control align-items\">\n    <div class=\"control-heading\">align-items</div>\n    <div class=\"control-explanation\">= crossAxisAlignment:</div>\n    <div class=\"control-group\">\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeAlignItems2(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"align-items2\"\n          value=\"stretch\" />\n        <span class=\"checkmark\" />\n        stretch\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeAlignItems2(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"align-items2\"\n          value=\"baseline\" />\n        <span class=\"checkmark\" />\n        baseline\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeAlignItems2(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"align-items2\"\n          value=\"center\"\n          checked=\"checked\" />\n        <span class=\"checkmark\" />\n        center (default)\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeAlignItems2(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"align-items2\"\n          value=\"flex-start\" />\n        <span class=\"checkmark\" />\n        flex-start\n      </label>\n      <label class=\"radio-container\">\n        <input\n          on:click={e => {\n            changeAlignItems2(e.target.value);\n          }}\n          type=\"radio\"\n          name=\"align-items2\"\n          value=\"flex-end\" />\n        <span class=\"checkmark\" />\n        flex-end\n      </label>\n    </div>\n  </div>\n\n  <div class=\"preview-container\">\n    <div class=\"control-heading\">PARENT 2 FLUTTER WIDGET OUTPUT</div>\n\n    <pre class=\"preview\">{printOutput2}</pre>\n\n  </div>\n\n</div>\n","<script>\n  import Display from \"./Display.svelte\";\n  import Control1 from \"./Control1.svelte\";\n  import Control2 from \"./Control2.svelte\";\n\n  let childCount1 = 3;\n  let flexDirection1 = \"column\";\n  let justifyContent1 = \"flex-start\";\n  let alignItems1 = \"center\";\n\n  let withParent2 = false;\n  let childCount2 = 2;\n  let flexDirection2 = \"row\";\n  let justifyContent2 = \"flex-start\";\n  let alignItems2 = \"center\";\n\n  function changeChildCount1(v) {\n    childCount1 = Number(v);\n  }\n  function changeFlexDirection1(v) {\n    flexDirection1 = v;\n  }\n  function changeJustifyContent1(v) {\n    justifyContent1 = v;\n  }\n  function changeAlignItems1(v) {\n    alignItems1 = v;\n  }\n\n  function changeWithParent2(v) {\n    withParent2 = v;\n  }\n\n  function changeChildCount2(v) {\n    childCount2 = Number(v);\n  }\n  function changeFlexDirection2(v) {\n    flexDirection2 = v;\n  }\n  function changeJustifyContent2(v) {\n    justifyContent2 = v;\n  }\n  function changeAlignItems2(v) {\n    alignItems2 = v;\n  }\n\n  let printOutputAll = \"\";\n  let printOutput1 = \"\";\n  let printOutput2 = \"\";\n  $: {\n    printOutput1 = \"\";\n    printOutput2 = \"\";\n    // OUTPUT2\n    if (flexDirection2.startsWith(\"column\")) {\n      printOutput2 += \"Column(\";\n    }\n    if (flexDirection2 === \"column-reverse\") {\n      printOutput2 +=\n        \"\\n                          verticalDirection: VerticalDirection.up,\";\n    }\n    if (flexDirection2.startsWith(\"row\")) {\n      printOutput2 += \"Row(\";\n    }\n    if (flexDirection2 === \"row-reverse\") {\n      printOutput2 +=\n        \"\\n                          textDirection: TextDirection.rtl,\";\n    }\n\n    if (justifyContent2 === \"flex-end\") {\n      printOutput2 +=\n        \"\\n                          mainAxisAlignment: MainAxisAlignment.end,\";\n    }\n    if (justifyContent2 === \"center\") {\n      printOutput2 +=\n        \"\\n                          mainAxisAlignment: MainAxisAlignment.center,\";\n    }\n    if (justifyContent2 === \"space-around\") {\n      printOutput2 +=\n        \"\\n                          mainAxisAlignment: MainAxisAlignment.spaceAround,\";\n    }\n    if (justifyContent2 === \"space-between\") {\n      printOutput2 +=\n        \"\\n                          mainAxisAlignment: MainAxisAlignment.spaceBetween,\";\n    }\n    if (alignItems2 === \"stretch\") {\n      printOutput2 +=\n        \"\\n                          crossAxisAlignment: CrossAxisAlignment.stretch,\";\n    }\n    if (alignItems2 === \"baseline\") {\n      printOutput2 +=\n        \"\\n                          crossAxisAlignment: CrossAxisAlignment.baseline,\";\n    }\n    if (alignItems2 === \"flex-start\") {\n      printOutput2 +=\n        \"\\n                          crossAxisAlignment: CrossAxisAlignment.start,\";\n    }\n    if (alignItems2 === \"flex-end\") {\n      printOutput2 +=\n        \"\\n                          crossAxisAlignment: CrossAxisAlignment.end,\";\n    }\n    printOutput2 += \"\\n                          children: <Widget>[\";\n    for (let index = 1; index <= childCount2; index++) {\n      printOutput2 += \"\\n                                    Container(\";\n      printOutput2 += `\\n                                     color: Colors.teal,`;\n      printOutput2 += `\\n                                     child: Text(\"${index}\"),`;\n      printOutput2 += \"\\n                                    ),\";\n    }\n    printOutput2 += \"\\n                                   ],\";\n    printOutput2 += \"\\n                         ),\";\n\n    // OUTPUT 1\n    if (flexDirection1.startsWith(\"column\")) {\n      printOutput1 += \"Column(\";\n    }\n    if (flexDirection1 === \"column-reverse\") {\n      printOutput1 += \"\\n       verticalDirection: VerticalDirection.up,\";\n    }\n    if (flexDirection1.startsWith(\"row\")) {\n      printOutput1 += \"Row(\";\n    }\n    if (flexDirection1 === \"row-reverse\") {\n      printOutput1 += \"\\n       textDirection: TextDirection.rtl,\";\n    }\n\n    if (justifyContent1 === \"flex-end\") {\n      printOutput1 += \"\\n       mainAxisAlignment: MainAxisAlignment.end,\";\n    }\n    if (justifyContent1 === \"center\") {\n      printOutput1 += \"\\n       mainAxisAlignment: MainAxisAlignment.center,\";\n    }\n    if (justifyContent1 === \"space-around\") {\n      printOutput1 +=\n        \"\\n       mainAxisAlignment: MainAxisAlignment.spaceAround,\";\n    }\n    if (justifyContent1 === \"space-between\") {\n      printOutput1 +=\n        \"\\n       mainAxisAlignment: MainAxisAlignment.spaceBetween,\";\n    }\n\n    if (alignItems1 === \"stretch\") {\n      printOutput1 +=\n        \"\\n       crossAxisAlignment: CrossAxisAlignment.stretch,\";\n    }\n    if (alignItems1 === \"baseline\") {\n      printOutput1 +=\n        \"\\n       crossAxisAlignment: CrossAxisAlignment.baseline,\";\n    }\n    if (alignItems1 === \"flex-start\") {\n      printOutput1 += \"\\n       crossAxisAlignment: CrossAxisAlignment.start,\";\n    }\n    if (alignItems1 === \"flex-end\") {\n      printOutput1 += \"\\n       crossAxisAlignment: CrossAxisAlignment.end,\";\n    }\n    printOutput1 += \"\\n       children:<Widget>[\";\n\n    for (let index = 1; index <= childCount1; index++) {\n      if (!withParent2 || childCount2 < 1) {\n        printOutput1 += \"\\n                 Container(\";\n        printOutput1 += `\\n                  color: Colors.blue,`;\n        printOutput1 += `\\n                  child: Text(\"${index}\"),`;\n        printOutput1 += \"\\n                 ),\";\n      } else {\n        printOutput1 += \"\\n                 Container(\";\n        printOutput1 += `\\n                  color: Colors.blue,`;\n        printOutput1 += `\\n                  child: ` + printOutput2;\n        printOutput1 += \"\\n                 ),\";\n      }\n    }\n\n    printOutput1 += \"\\n                ],\";\n    printOutput1 += \"\\n       ),\";\n\n    printOutputAll = \"\";\n    printOutputAll += \"Container(\";\n    printOutputAll += \"\\n color: Colors.white,\";\n    printOutputAll += \"\\n width: double.infinity,\";\n    printOutputAll += \"\\n height: double.infinity,\";\n    printOutputAll += \"\\n margin: EdgeInsets.all(0),\";\n    printOutputAll += \"\\n padding: EdgeInsets.fromLTRB(0, 0, 0, 0),\";\n    printOutputAll += \"\\n child: \" + printOutput1;\n    printOutputAll += \"\\n)\";\n  }\n</script>\n\n<style>\n  .flex-responsive {\n    display: flex;\n  }\n  @media only screen and (max-width: 872px) {\n    .flex-responsive {\n      display: block;\n      padding-left: 4px;\n    }\n  }\n\n  .preview-container {\n    min-width: 550px;\n    margin: 0px 20px;\n  }\n</style>\n\n<div class=\"page-heading\">Web flexbox with flutter output</div>\n<div class=\"flex-responsive\">\n  <Display\n    {childCount1}\n    {flexDirection1}\n    {justifyContent1}\n    {alignItems1}\n    {withParent2}\n    {childCount2}\n    {flexDirection2}\n    {justifyContent2}\n    {alignItems2} />\n  <Control1\n    {flexDirection1}\n    {justifyContent1}\n    {alignItems1}\n    {changeChildCount1}\n    {changeFlexDirection1}\n    {changeJustifyContent1}\n    {changeAlignItems1}\n    {withParent2}\n    {changeWithParent2} />\n  {#if withParent2}\n    <Control2\n      {flexDirection2}\n      {justifyContent2}\n      {alignItems2}\n      {changeChildCount2}\n      {changeFlexDirection2}\n      {changeJustifyContent2}\n      {changeAlignItems2} />\n  {/if}\n</div>\n\n<div class=\"preview-container\">\n  <div class=\"control-heading\">FULL FLUTTER WIDGET OUTPUT</div>\n\n  <pre class=\"preview\">{printOutputAll}</pre>\n\n</div>\n<div class=\"contact\">\n  Thanks to\n  <a href=\"https://twitter.com/taylersumms\">@taylersumms</a>\n  for inspiration\n  <a href=\"https://flexbox.help/\">flexbox.help</a>\n  <br />\n  Feedback? Get in touch:\n  <a href=\"https://github.com/jethro91\">@jethro91</a>\n</div>\n","import App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.body\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flush","seen_callbacks","Set","shift","update","$$","pop","callback","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","key","then","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","callbacks","ready","ret","hydrate","l","Array","from","childNodes","children","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","childCount1Arr","flexDirection1","justifyContent1","alignItems1","idx2","childCount2Arr","flexDirection2","justifyContent2","alignItems2","idx","withParent2","childCount1","childCount2","printOutput1","changeChildCount1","changeFlexDirection1","changeJustifyContent1","changeAlignItems1","changeWithParent2","startsWith","e","printOutput2","changeChildCount2","changeFlexDirection2","changeJustifyContent2","changeAlignItems2","printOutputAll","r","v","Number","body"],"mappings":"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"}